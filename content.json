{"meta":{"title":"FeatherBlaze 博客","subtitle":"达成成就：超越生死！","description":"达成成就：超越生死！FeatherBlaze博客，分享实用的软件、教程、技巧……欢迎阅读！\\(^_^)/","author":"FeatherBlaze","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2025-05-24T04:38:19.400Z","updated":"2025-05-04T06:50:34.558Z","comments":true,"path":"404.html","permalink":"http://example.com/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2025-05-24T04:38:19.400Z","updated":"2025-05-03T02:08:44.456Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"所有公告","date":"2025-05-24T04:38:19.401Z","updated":"2025-05-04T07:13:13.564Z","comments":true,"path":"announcements/index.html","permalink":"http://example.com/announcements/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2025-05-24T04:38:19.402Z","updated":"2025-05-04T06:46:08.056Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2025-05-24T04:38:19.407Z","updated":"2025-05-03T02:12:31.564Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2025-05-24T04:38:19.402Z","updated":"2025-05-03T11:01:01.323Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"一些链接。","text":"一些链接。 更多链接陆续添加中…"}],"posts":[{"title":"FOI2025算法夏令营C班day2——搜索算法 参考答案","slug":"foi2025-sssf","date":"2025-07-14T11:48:12.000Z","updated":"2025-07-14T11:59:14.219Z","comments":true,"path":"2025/07/14/foi2025-sssf/","permalink":"http://example.com/2025/07/14/foi2025-sssf/","excerpt":"","text":"代码仅供参考·2025年7月14日8时30分(Day1)·搜索算法·C++最后更新于：2025-07-14 19:58:26别被 “我学不会” 的念头困住。编程就像拼图，从最小的模块开始，拼着拼着，你就会突然看清整体的轮廓。 #A. P44 特殊的四位数字12345678910111213141516171819202122232425262728293031#include &lt;iostream&gt; using namespace std;int n, nums[100]=&#123;1&#125;;bool a[100];void prt(int step) &#123; for (int i=1; i&lt;=4; i++) cout &lt;&lt; nums[i]; cout &lt;&lt; endl;&#125;void dfs(int step, int has) &#123; if (step &gt; 4) return ; for(int i=nums[step-1]; i&lt;=has&amp;&amp;i&lt;n&amp;&amp;i&lt;=9; i++)&#123; if(!a[i]) &#123; a[i] = true; nums[step] = i; has -= i; if(has==0 &amp;&amp; step==4)prt(step); else dfs(step+1, has); has += i; a[i] = false; &#125; &#125;&#125;int main() &#123; cin &gt;&gt; n; dfs(1, n); return 0; &#125; #B. P45 最大黑区域123456789101112131415161718192021222324252627282930313233#include &lt;iostream&gt;using namespace std;int n, m, a[110][110], cnt, ans;int max(int a, int b) &#123; return a&gt;b?a:b;&#125;void dfs(int x, int y) &#123; if (x&lt;1 || x&gt;n || y&lt;1 || y&gt;m || !a[x][y]) return; a[x][y] = 0; cnt++; dfs(x-1, y); dfs(x+1, y); dfs(x, y-1); dfs(x, y+1);&#125;int main () &#123; cin &gt;&gt; n &gt;&gt; m; for (int i=1; i&lt;=n; i++) for (int j=1; j&lt;=m; j++) cin &gt;&gt; a[i][j]; for (int i=1; i&lt;=n; i++) for (int j=1; j&lt;=m; j++) if (a[i][j]) &#123; cnt = 0; dfs(i, j); ans = max(ans, cnt); &#125; cout &lt;&lt; ans;&#125; #C. P46 奇怪的电梯123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;iostream&gt;#include &lt;queue&gt;using namespace std;struct node &#123; int x, y;&#125;;int n, a, b, k[205];bool vis[205];queue&lt;node&gt; q;int bfs() &#123; q.push(&#123;a, 0&#125;); vis[a] = true; while (!q.empty()) &#123; int x=q.front().x, y=q.front().y; q.pop(); if (x == b) return y; int x_new, y_new; x_new = x+k[x]; y_new = y+1; if (x_new&gt;=1 &amp;&amp; x_new&lt;=n &amp;&amp; !vis[x_new]) &#123; q.push(&#123;x_new, y_new&#125;); vis[x_new] = true; &#125; x_new = x-k[x]; y_new = y+1; if (x_new&gt;=1 &amp;&amp; x_new&lt;=n &amp;&amp; !vis[x_new]) &#123; q.push(&#123;x_new, y_new&#125;); vis[x_new] = true; &#125; &#125; return -1;&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; a &gt;&gt; b; for (int i=1; i &lt;= n; i++) cin &gt;&gt; k[i]; cout &lt;&lt; bfs(); return 0;&#125; #D. P55 细胞1234567891011121314151617181920212223242526272829303132333435363738394041424344#include &lt;iostream&gt;using namespace std;struct node &#123; int x, y;&#125;q[10000];char ma[101][101];int n, m, ans, dx[4]=&#123;0, 0, 1, -1&#125;, dy[4]=&#123;1, -1, 0, 0&#125;;void bfs(int i, int j) &#123; int front=0, rear=1; q[1].x = i; q[1].y = j; ma[i][j] = &#x27;0&#x27;; while (front &lt; rear) &#123; front++; for (int i=0; i&lt;=3; i++) &#123; int x=q[front].x+dx[i]; int y=q[front].y+dy[i]; if (x&gt;=1 &amp;&amp; x&lt;=n &amp;&amp; y&gt;=1 &amp;&amp; y&lt;=m &amp;&amp; ma[x][y]!=&#x27;0&#x27;) &#123; rear++; q[rear].x = x; q[rear].y = y; ma[x][y] = &#x27;0&#x27;; &#125; &#125; &#125;&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; m; for (int i=1; i&lt;=n; i++) for (int j=1; j&lt;=m; j++) cin &gt;&gt; ma[i][j]; for (int i=1; i&lt;=n; i++) for (int j=1; j&lt;=m; j++) if (ma[i][j]!=&#x27;0&#x27;) &#123; ans++; bfs(i, j); &#125; cout &lt;&lt; ans; return 0;&#125; #E. P56 抓住那头牛1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;using namespace std;int dx[3]=&#123;-1,1,0&#125;, map[100010], n, k;struct node &#123; int x, t;&#125;q[100010];void bfs() &#123; int head=0,tail=1; q[1].x = n; q[1].t = 0; map[n] = 1; while (head &lt; tail) &#123; head++; dx[2] = q[head].x; for (int i=0; i&lt;3; i++)&#123; int x = q[head].x+dx[i]; if (x&gt;=0 &amp;&amp; x&lt;=100005 &amp;&amp; map[x]==0) &#123; tail++; q[tail].x = x; q[tail].t = q[head].t+1; map[x] = 1; if (x == k) &#123; cout &lt;&lt; q[tail].t; return; &#125; &#125; &#125; &#125;&#125;int main() &#123; cin &gt;&gt; n &gt;&gt; k; if (n == k) &#123; cout&lt;&lt;0; return 0; &#125; bfs(); return 0;&#125;","categories":[{"name":"FOI2025","slug":"FOI2025","permalink":"http://example.com/categories/FOI2025/"}],"tags":[{"name":"答案","slug":"答案","permalink":"http://example.com/tags/%E7%AD%94%E6%A1%88/"},{"name":"C++","slug":"C","permalink":"http://example.com/tags/C/"},{"name":"编程","slug":"编程","permalink":"http://example.com/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"FOI2025算法夏令营C班day1——基础数据结构 参考答案","slug":"foi2025-jiujjg","date":"2025-07-13T10:26:52.000Z","updated":"2025-07-14T12:00:03.042Z","comments":true,"path":"2025/07/13/foi2025-jiujjg/","permalink":"http://example.com/2025/07/13/foi2025-jiujjg/","excerpt":"","text":"代码仅供参考·2025年7月13日8时30分(Day1)·基础数据结构·C++最后更新于：2025-07-13 21:33:30编程的路上没有捷径，但有积累的复利 —— 今天敲下的 100 行，会成为明天解决复杂问题的底气。 #A. P33 括弧匹配检验1234567891011121314151617181920212223242526#include &lt;iostream&gt;using namespace std;int main() &#123; char c, s[300], top=0; while (cin &gt;&gt; c) &#123; if (c==&#x27;(&#x27; || c==&#x27;[&#x27;) s[++top] = c; if (c == &#x27;)&#x27;) &#123; if (s[top] == &#x27;(&#x27;) top--; else &#123; cout &lt;&lt; &quot;Wrong&quot;; return 0; &#125; &#125; if (c == &#x27;]&#x27;) &#123; if (s[top] == &#x27;[&#x27;) top--; else &#123; cout &lt;&lt; &quot;Wrong&quot;; return 0; &#125; &#125; &#125; if (top &gt; 0) cout &lt;&lt; &quot;Wrong&quot;; else cout &lt;&lt; &quot;OK&quot;; return 0;&#125; #B. P54 后缀表达式的值12345678910111213141516171819202122232425#include &lt;iostream&gt;using namespace std;long long stack[251], x, y;string s;int main() &#123; getline(cin, s, &#x27;@&#x27;); int len = s.size(), top=0; for (int i=0; i&lt;len; i++) &#123; y = stack[top]; if (s[i] == &#x27;+&#x27;) stack[--top] += y; else if (s[i] == &#x27;-&#x27;) stack[--top] -= y; else if (s[i] == &#x27;*&#x27;) stack[--top] *= y; else if (s[i] == &#x27;/&#x27;) stack[--top] /= y; else if (s[i] == &#x27; &#x27;); else &#123; x = 0; while (s[i] != &#x27; &#x27;) x = x*10+s[i++]-48; stack[++top] = x; &#125; &#125; cout &lt;&lt; stack[top]; return 0;&#125; #C. P41 点赞热度12345678910111213141516171819#include &lt;iostream&gt;using namespace std;int main() &#123; int n, k, t, dzs=0, ans=0, q[100001], front=1, rear=0; cin &gt;&gt; n &gt;&gt; k; for (int i=1; i&lt;=n; i++) &#123; cin &gt;&gt; t; while (t-q[front]&gt;=60 &amp;&amp; front&lt;=rear) &#123; dzs--; front++; &#125; q[++rear] = t; dzs++; if (dzs &gt;= k) ans++; &#125; cout &lt;&lt; ans; return 0;&#125; #D. P42 单词数123456789101112131415161718192021#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;set&gt;using namespace std;int main() &#123; set&lt;string&gt; s; string str, t; while (getline(cin, str)) &#123; for (int i=0; i&lt;str.size(); i++) &#123; int j=i; while (str[j]!=&#x27; &#x27; &amp;&amp; j&lt;str.size()) j++; t = str.substr(i, j-i); i = j; s.insert(t); &#125; cout &lt;&lt; s.size() &lt;&lt; endl; s.clear(); &#125; return 0;&#125; #E. P43 新生舞会12345678910111213141516171819202122232425#include &lt;iostream&gt;#include &lt;map&gt;using namespace std;map&lt;string, char&gt; ma;map&lt;string, char&gt;::iterator it;int n, m;string name, id, a, b;char xb;int main() &#123; cin &gt;&gt; n; while (n--) &#123; cin &gt;&gt; name &gt;&gt; id &gt;&gt; xb; ma.insert(&#123;name, xb&#125;); ma.insert(&#123;id, xb&#125;); &#125; cin &gt;&gt; m; while (m--) &#123; cin &gt;&gt; a &gt;&gt; b; if (ma[a] != ma[b]) cout &lt;&lt; &#x27;Y&#x27; &lt;&lt; endl; else cout &lt;&lt; &#x27;N&#x27; &lt;&lt; endl; &#125; return 0;&#125; #F. P57 [CSP2019 Junior T2] 公交换乘123456789101112131415161718192021222324252627#include &lt;iostream&gt;using namespace std;int main()&#123; int p[100005], t[100005], front=1, rear=0, n, tool, price, time, ans=0, i; cin &gt;&gt; n; while (n--) &#123; cin &gt;&gt; tool &gt;&gt; price &gt;&gt; time; if(tool == 0) &#123; rear++; p[rear] = price; t[rear] = time; ans += price; &#125; else &#123; while (front&lt;=rear &amp;&amp; time-t[front]&gt;45) front++; for (i=front; i&lt;=rear; i++) if(p[i] &gt;= price)&#123; p[i] = 0; break; &#125; if(i&gt;rear)ans+=price; &#125; &#125; cout &lt;&lt; ans; return 0;&#125; #G. P64 [NOIP2016普及组T3]海港1234567891011121314151617181920212223242526#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int n, k, t, gj, tong[100001], ti[300001], na[300005], front=1, rear=0, cnt=0;int main()&#123; cin &gt;&gt; n; while (n--) &#123; cin &gt;&gt; t &gt;&gt; k; while (k--) &#123; cin &gt;&gt; gj; ti[++rear] = t; na[rear] = gj; tong[gj]++; if (tong[gj] == 1) cnt++; &#125; while (t-ti[front] &gt;= 86400) &#123; tong[na[front]]--; if (tong[na[front]] == 0) cnt--; front++; &#125; cout &lt;&lt; cnt &lt;&lt; endl; &#125; return 0;&#125;","categories":[{"name":"FOI2025","slug":"FOI2025","permalink":"http://example.com/categories/FOI2025/"}],"tags":[{"name":"答案","slug":"答案","permalink":"http://example.com/tags/%E7%AD%94%E6%A1%88/"},{"name":"C++","slug":"C","permalink":"http://example.com/tags/C/"},{"name":"编程","slug":"编程","permalink":"http://example.com/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"【公告】更改网站字体","slug":"anncmnt-20250518_102625","date":"2025-05-18T02:26:25.000Z","updated":"2025-05-18T03:02:10.435Z","comments":true,"path":"2025/05/18/anncmnt-20250518_102625/","permalink":"http://example.com/2025/05/18/anncmnt-20250518_102625/","excerpt":"","text":"更改网站域名在jsDelivr（用于加速存储在Github的自定义字体，加载需要一定时间）可以正常访问的情况下，网站将会显示： （优先级从左往右） 标题字体：MiSans, PingFang SC, Microsoft YaHei, Helvetica, Arial 正文字体：MiSans, PingFang SC, Microsoft YaHei, Helvetica, Arial 代码字体：JetBrains Maple Mono, Menlo, Monaco, Cascadia Mono, Consolas （自定义字体优先，macOS和Windows默认字体备用） ↓代码段↓ 1234567891011121314151617181920custom_css: fontfamily: logofont: fontfamily: &#x27;MiSans, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, Helvetica, Arial&#x27; name: &#x27;MiSans&#x27; url: https://gcore.jsdelivr.net/gh/FeatherBlaze/fonts/MiSans/MiSans-Regular.ttf weight: normal style: normal bodyfont: fontfamily: &#x27;&quot;MiSans&quot;, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, Helvetica, Arial&#x27; name: &#x27;MiSans&#x27; url: https://gcore.jsdelivr.net/gh/FeatherBlaze/fonts/MiSans/MiSans-Regular.ttf weight: normal style: normal codefont: fontfamily: &#x27;&quot;JetBrains Maple Mono&quot;, Menlo, Monaco, &quot;Cascadia Mono&quot;, &quot;Consolas&quot;&#x27; name: &#x27;JetBrains Maple Mono&#x27; url: https://gcore.jsdelivr.net/gh/FeatherBlaze/fonts/JetBrainsMapleMono/JetBrainsMapleMono-Regular.ttf weight: normal style: normal 原因这将提供更好的阅读体验。","categories":[{"name":"公告","slug":"公告","permalink":"http://example.com/categories/%E5%85%AC%E5%91%8A/"}],"tags":[{"name":"公告","slug":"公告","permalink":"http://example.com/tags/%E5%85%AC%E5%91%8A/"}]},{"title":"【公告】更改网站域名","slug":"anncmnt-20250505_173902","date":"2025-05-05T09:39:02.000Z","updated":"2025-05-18T04:08:26.479Z","comments":true,"path":"2025/05/05/anncmnt-20250505_173902/","permalink":"http://example.com/2025/05/05/anncmnt-20250505_173902/","excerpt":"","text":"更改网站域名网站域名将被更改为“fbblog.pages.dev”，访问旧域名将会自动跳转到新域名。 原因原域名使用GitHub Pages默认域名，服务器在国外，国内加载较慢。现域名使用Cloudflare Pages域名，国内有服务器，加载速度更快。","categories":[{"name":"公告","slug":"公告","permalink":"http://example.com/categories/%E5%85%AC%E5%91%8A/"}],"tags":[{"name":"公告","slug":"公告","permalink":"http://example.com/tags/%E5%85%AC%E5%91%8A/"}]},{"title":"【免费】Github+PicGo+jsDelivr搭建属于你的稳定图床","slug":"free-imagehost","date":"2025-05-04T10:41:05.000Z","updated":"2025-05-18T02:58:11.172Z","comments":true,"path":"2025/05/04/free-imagehost/","permalink":"http://example.com/2025/05/04/free-imagehost/","excerpt":"","text":"在写作和搭建博客时，要让其他人也能看到文档中的图片，要么把图片拷给别人，要么将图片上传。可上传图片需要服务器，免费的图床随时有跑路的风险。不想花钱，怎么办？ 如果你也有同样的困扰，那么，你来对地方了。这篇文章可以帮助你搭建一个属于你免费、稳定、不限空间的图床。 STEP1 创建一个Github仓库打开Github，如果打不开可以使用Watt Toolkit（原名Steam++）加速（不成功点加速设置&gt;安装证书）。如果没有Github账户就创建一个账户（需要邮箱）。新建一个仓库，名称随意（如images），其他默认，然后拉到底点击“Create repository”。 STEP2 获取Token打开Github，点击右上角头像&gt;“Settings”&gt;“Developer settings”&gt;“Personal access tokens”&gt;“Tokens (classic)”，选择“Generate new token”&gt;“Generate new token (classic)”。输入账户密码，“Note”随便填（如PicGo），Expiration选择“No expiration”，“Select scopes”，然后点击“Generate token”。复制生成的Token，保存好，过会儿将无法看到Token。 STEP3 下载并配置PicGoPicGo是一个开源的图片上传工具，可以在Github下载，但国内速度比较慢，推荐自行搜索安装包。 下载后打开，找到右下角（Windows）或右上角（macOS）的托盘图标（如果找不到在隐藏的图标里找），单击。选择PicGo设置，打开开机自启和时间戳重命名，“请选择显示的图床”只勾选Github。然后选择图床设置&gt;Github，“设定仓库名”：Github用户名&#x2F;创建的仓库名，“设定分支名”：main或master，“设定Token”：前面获取的Token，“设定存储路径”：随便填几个字母加&#x2F;（如img&#x2F;）或留空。 STEP4 jsDelivr加速图床现在就可以把图片拖到上传区了，可以复制多种格式的链接（如Markdown、URL），但可能上传失败或加载缓慢。如果在国内，推荐用jsDelivr加速图床。再次打开图床设置，“设定自定义域名”填写https://gcore.jsdelivr.net/gh/用户名/仓库名@分支名即可。 完成！现在，一个属于你免费、稳定、不限空间的图床就搭建完成了，你可以使用图床存储图片，让其他人也能看到网页、文档中的图片了。","categories":[{"name":"教程","slug":"教程","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/"},{"name":"Github","slug":"教程/Github","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/Github/"}],"tags":[{"name":"图床","slug":"图床","permalink":"http://example.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"免费","slug":"免费","permalink":"http://example.com/tags/%E5%85%8D%E8%B4%B9/"},{"name":"Github","slug":"Github","permalink":"http://example.com/tags/Github/"},{"name":"jsDelivr","slug":"jsDelivr","permalink":"http://example.com/tags/jsDelivr/"}]},{"title":"【公告】迁移部分图片到图床","slug":"anncmnt-20250504_144654","date":"2025-05-04T05:46:54.000Z","updated":"2025-05-24T14:06:45.167Z","comments":true,"path":"2025/05/04/anncmnt-20250504_144654/","permalink":"http://example.com/2025/05/04/anncmnt-20250504_144654/","excerpt":"","text":"迁移图片到图床近期将迁移所有图片到图床。 原因网站内的图片保存在Github（且未使用加速），国内加载缓慢，严重影响网站加载速度及美观性。","categories":[{"name":"公告","slug":"公告","permalink":"http://example.com/categories/%E5%85%AC%E5%91%8A/"}],"tags":[{"name":"公告","slug":"公告","permalink":"http://example.com/tags/%E5%85%AC%E5%91%8A/"}]},{"title":"无须打开，立即中招！Win上古文件名Bug足以毁掉你的电脑！","slug":"filename-bug","date":"2025-05-03T07:33:03.000Z","updated":"2025-06-01T09:14:23.755Z","comments":true,"path":"2025/05/03/filename-bug/","permalink":"http://example.com/2025/05/03/filename-bug/","excerpt":"","text":"先逝试：将Python的主程序复制到桌面，然后将其重命名为： 100000000000000000000000000000000000000000000000000000000000000000~00000000000000000000000000000000000000000000000000000000000000000 咦？神奇的事情发生了：桌面不停黑屏，无法打开任何应用——系统正在不停地重启资源管理器（explore.exe）！ 为什么会发生这种事？具体原因可以参考边亮和epcdiy的这期视频，这篇文章只讲怎么复现和修复。 复现 该Bug可能已经在新版本中被修复，推荐使用Windows 7~Windows 11 22H2。 先将任意可以运行的exe应用程序（或ico文件）复制到桌面，然后重命名为大于130个字符且至少含有一个波浪符（~）的名称，即可复现。 当然，也可以编写一个批处理文件，名为start.bat，方便整蛊别人测试Bug，内容如下： 1copy &quot;.\\data\\00000000000000000000000000000000000000000000000000000000000000000~00000000000000000000000000000000000000000000000000000000000000000.exe&quot; &quot;%USERPROFILE%\\Desktop&quot; 这条cmd命令将当前文件夹下的data文件夹的“00000000000000000000000000000000000000000000000000000000000000000~00000000000000000000000000000000000000000000000000000000000000000.exe”复制到当前用户的桌面文件夹。只需要将其保存为start.bat，放在一个文件夹下，并创建一个data文件夹用于存放重命名过的文件，程序名称换成你的文件名，需要时运行start.bat即可。 修复整完别人测试完后，该如何让电脑恢复正常呢？ Ctrl+Alt+Del打开安全选项，右下角点击电源，按住Shift点重启，直到提示“请稍候”； 开机时进入高级选项，点击“疑难解答”-“高级选项”-“命令提示符”； 输入： 12345C:cd /Userscd 用户名cd Desktopdel 00000000000000000000000000000000000000000000000000000000000000000~00000000000000000000000000000000000000000000000000000000000000000.exe del后的文本换成你的文件名，也可以按Tab键找你的文件，如果，每个命令输入完成后按回车 结语怎么样，学废了吗？愣着干啥，快去整你的朋友啊！","categories":[{"name":"Windows","slug":"Windows","permalink":"http://example.com/categories/Windows/"}],"tags":[{"name":"Bug","slug":"Bug","permalink":"http://example.com/tags/Bug/"},{"name":"Win","slug":"Win","permalink":"http://example.com/tags/Win/"},{"name":"文件名","slug":"文件名","permalink":"http://example.com/tags/%E6%96%87%E4%BB%B6%E5%90%8D/"}]},{"title":"【VSCode美化】别人写代码怎么如此流畅？让我来拯救你的编辑器！","slug":"smooth-vscode","date":"2025-05-02T13:23:00.000Z","updated":"2025-05-27T05:17:14.217Z","comments":true,"path":"2025/05/02/smooth-vscode/","permalink":"http://example.com/2025/05/02/smooth-vscode/","excerpt":"","text":"引言别人的VSCode不光光标闪烁流畅，移动丝滑，而且滚动简直如同德芙一般；再看看自己的：光标僵硬，移动没动画，滚动连流畅都做不到……那就快来看看如何配置出“别人家的孩子吧！” 正片开始！方法1 | 使用设置(UI) 优点：界面人性化；缺点：较为麻烦。对JSON有一定了解的推荐使用方法二。 STEP1 打开设置 在菜单中打开 在VSCode菜单（Windows）或访达（macOS）中点击文件&gt;首选项&gt;设置。 在管理中打开 点击VSCode左下角的管理（齿轮图标）&gt;设置。 使用命令打开 点击VSCode顶部的搜索，输入以下内容后按回车或选择第一个选项： 1&gt;Preferences: Open Settings (UI) STEP2 更改设置在“搜索设置”中输入“smooth”，然后启用“Editor: Smooth Scrolling”（编辑器滚动动画）、“Workbench &gt; List: Smooth Scrolling”（设置等页面滚动动画）、“Terminal &gt; Integrated: Smooth Scrolling”（内置终端滚动动画），并将“Editor: Cursor Smooth Carte Animation”（鼠标移动动画）设为“on”，“Editor: Cursor Blinking”（鼠标闪烁动画）设为“smooth”，也可根据需要关闭。 方法2 | 使用用户设置(JSON) 优点：方便；缺点：较难更改。小白推荐使用方法一。 STEP1 打开设置点击VSCode顶部的搜索，输入以下内容后按回车或选择第一个选项： 1&gt;Preferences: Open User Settings (JSON) STEP2 更改设置在“setting.json”最后一行的“}”前一行末尾输入一个英文逗号并换行，然后输入以下文本后保存： 12345&quot;editor.smoothScrolling&quot;: true,&quot;editor.cursorSmoothCaretAnimation&quot;: &quot;on&quot;,&quot;workbench.list.smoothScrolling&quot;: true,&quot;terminal.integrated.smoothScrolling&quot;: true,&quot;editor.cursorBlinking&quot;: &quot;smooth&quot; !!!重要：如果其中一行或几行没有缩进，请在该行开头按“Tab”插入一个制表符!!! 结语现在，你已经拥有了丝滑流畅的VSCode：不光光标闪烁流畅，移动丝滑，而且滚动简直如同德芙一般。那么，VSCode德芙版，启动！𰻝","categories":[{"name":"教程","slug":"教程","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/"},{"name":"Visual Studio Code","slug":"教程/Visual-Studio-Code","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/Visual-Studio-Code/"}],"tags":[{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"},{"name":"美化","slug":"美化","permalink":"http://example.com/tags/%E7%BE%8E%E5%8C%96/"},{"name":"流畅","slug":"流畅","permalink":"http://example.com/tags/%E6%B5%81%E7%95%85/"}]}],"categories":[{"name":"FOI2025","slug":"FOI2025","permalink":"http://example.com/categories/FOI2025/"},{"name":"公告","slug":"公告","permalink":"http://example.com/categories/%E5%85%AC%E5%91%8A/"},{"name":"教程","slug":"教程","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/"},{"name":"Github","slug":"教程/Github","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/Github/"},{"name":"Windows","slug":"Windows","permalink":"http://example.com/categories/Windows/"},{"name":"Visual Studio Code","slug":"教程/Visual-Studio-Code","permalink":"http://example.com/categories/%E6%95%99%E7%A8%8B/Visual-Studio-Code/"}],"tags":[{"name":"答案","slug":"答案","permalink":"http://example.com/tags/%E7%AD%94%E6%A1%88/"},{"name":"C++","slug":"C","permalink":"http://example.com/tags/C/"},{"name":"编程","slug":"编程","permalink":"http://example.com/tags/%E7%BC%96%E7%A8%8B/"},{"name":"公告","slug":"公告","permalink":"http://example.com/tags/%E5%85%AC%E5%91%8A/"},{"name":"图床","slug":"图床","permalink":"http://example.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"免费","slug":"免费","permalink":"http://example.com/tags/%E5%85%8D%E8%B4%B9/"},{"name":"Github","slug":"Github","permalink":"http://example.com/tags/Github/"},{"name":"jsDelivr","slug":"jsDelivr","permalink":"http://example.com/tags/jsDelivr/"},{"name":"Bug","slug":"Bug","permalink":"http://example.com/tags/Bug/"},{"name":"Win","slug":"Win","permalink":"http://example.com/tags/Win/"},{"name":"文件名","slug":"文件名","permalink":"http://example.com/tags/%E6%96%87%E4%BB%B6%E5%90%8D/"},{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"},{"name":"美化","slug":"美化","permalink":"http://example.com/tags/%E7%BE%8E%E5%8C%96/"},{"name":"流畅","slug":"流畅","permalink":"http://example.com/tags/%E6%B5%81%E7%95%85/"}]}